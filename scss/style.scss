@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800&display=swap');

// color variables (for now)
// via wemakepalettes : No. 59: Limey - https://www.instagram.com/p/CR9IHFdLYLo/

:root {
  --light: #f6f4f5;
  --midlight: #d2d588;
  --mid: #beca1e;
  --middark: #80a001;
  --dark:#697d06;
  --warningColor: #AF1B3F;
  --highlight: #b1740f;
}

.dark-mode {
  --light: #00111a;
  --midlight: #003047;
  --mid: #002233;

  --middark: #fff;


  --dark:#1f7ead;

  --warningColor: #AF1B3F;
  --highlight: #683f6d;
}




// Breakpoints

@mixin tablet-and-wider {
  @media (min-width: 768px) { @content; }
}
@mixin desktop-and-wider {
  @media (min-width: 1024px) { @content; }
}


$pad: 1rem;

.wrapper {
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
}

/* started with list.js placeholder styles */
.sort.asc, .sort.desc {
  background-color: var(--mid);
  color: var(--dark);
}
.sort.asc::after {
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  display: inline-block;
  content: '\f162';
  padding-left: .25rem;
}
.sort.desc::after {
  font-family: "Font Awesome 6 Free";
  font-weight: 900;
  display: inline-block;
  content: '\f887';
  padding-left: .25rem;
}

// Temp Hide
#select-setup {
  display: none;
}

body, input, textarea {
  background-color: var(--light);
  color: var(--dark);
  // margin: 1rem;
  font-family: 'Manrope', sans-serif;
}

input, textarea {
  padding: $pad;
}

select, button {
  background-color: var(--dark);
  color: var(--light);
  padding: $pad;
  margin-right: 1rem;
  border:none;
  transition: .3s;

  &:hover {
    background-color: var(--mid);
    color: var(--dark);
  }

}


#remove-button {
  background-color: var(--light);
  color: var(--dark);
  border: 1px solid currentColor;

  &:hover {
    background-color: var(--warningColor);
    color: var(--light);
    // border: 1px solid currentColor;
  }
}

tr {
  padding: $pad;

  &:nth-child(even) {
    background-color: var(--midlight);
  }

  &.marked {
    background-color: var(--highlight)!important;
    color: var(--light);
  }
}

td, th {
  padding: $pad;
}

td {
  cursor: pointer;
  text-align: center;
}

h1 {
  text-transform:uppercase;
  margin: 0;
}

.hamburger,
.close-out {
  font-size: 2em;
}

.close-out {
  display: flex;
  flex-direction: row-reverse;
}

header,
section {
  margin: 1rem;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
nav{
  background-color: var(--midlight);
  position: sticky;
  top: 0;
  z-index: 1;
}

nav ul,
.menu-tray ul,
.pagination {
  width: 100%;
  display: flex;
  padding: 0;
}

nav li,
.menu-tray li {
  display: inline-block;
  padding: .5rem;
  flex-grow: 1;
  text-align: center;

}

nav li {
  color: var(--mid)Dark;
}

nav .active {
  border: 2px solid var(--dark);
  font-weight: 600;
  color: var(--dark);
  background-color: var(--mid);
}

.project-header h2,
.project-header h3{
  margin: 0;
}

.inactive{
  display:none;
}

label {
  display: block;
  margin-bottom: .2rem;
}

input {
  margin-bottom: .5rem;
}

.grid-row{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1rem;

  input{
      width: 75%;
  }
}

.flex-row{
  display: flex;
  gap: .5rem;
}

.full{
  width: 100%;
  margin: .5rem 0;
  flex-grow: 1;
}

.search {
  padding: .5rem;
  flex-grow: 1;
}

textarea {
  height: 5rem;
}

.big-button {
  padding: 1rem;
  background-color: var(--mid);
  color: var(--dark);
  font-weight: 600;
  font-size: 1.2em;
}

table {
  max-width: 100%;
  // width: max-content;
  margin: 0 auto;
  // font-size: .75rem;
}

footer {
  margin: 1rem;
  text-align: center;

  a {
    color: var(--dark);
    transition: .3s;

    &:hover {
      color: var(--mid);
    }

  }

}


// ==============================
// Strange responsive table thing I'm going to try.
// https://css-tricks.com/responsive-data-tables/

/*
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/
@media
only screen and (max-width: 760px),
(min-device-width: 768px) and (max-device-width: 1024px)  {

	/* Force table to not be like tables anymore */
	table, thead, tbody, th, td, tr {
		display: block;
	}

	/* Hide table headers (but not display: none;, for accessibility) */
	thead tr {
		position: absolute;
		top: -9999px;
		left: -9999px;
	}

	tr { border: 1px solid #ccc; }

	td {
		/* Behave  like a "row" */
		border: none;
		border-bottom: 1px solid #eee;
		position: relative;
		padding-left: 50%;
    min-height: 1.5rem;
	}

	td:before {
		/* Now like a table header */
		position: absolute;
		/* Top/left values mimic padding */
		top: 6px;
		left: 6px;
		width: 45%;
		padding-right: 10px;
		white-space: nowrap;
	}

	/*
	Label the data
	*/
	td:nth-of-type(1):before { content: "Scene"; }
	td:nth-of-type(2):before { content: "Shot"; }
	td:nth-of-type(3):before { content: "Take"; }
	td:nth-of-type(4):before { content: "Time & Date"; }
	td:nth-of-type(5):before { content: "Lens (mm)"; }
	td:nth-of-type(6):before { content: "ISO"; }
	td:nth-of-type(7):before { content: "fstop"; }
	td:nth-of-type(8):before { content: "Note"; }
	td:nth-of-type(9):before { content: "Mark"; }
}

// ---------------------

.menu-tray {
  position:fixed;
  overflow:auto;
  top:0;
  right:0;
  height: 100%;
  width:80vw;
  color:var(--light);
  z-index:505;
  transition: transform .5s;
  transform: translateX(100%);
  background-color: var(--dark);

  padding: 1.25rem;
}

.menu-tray-on {
  transform: translateX(0);
}

.menu-tray ul {
  flex-direction: column;
}

.menu-tray li {
  border: none;
  border-bottom: 1px solid #eee;
  padding: 1rem;

  transition: .5s;

  &:hover {
    background-color: var(--mid)Dark;
  }

  &:first-child {
    border-top: 1px solid #eee;
  }
}


.underlay {
  position:fixed;
  overflow:hidden;
  top:0;
  left:0;
  height: 100%;
  width:100vw;
  background-color:#000;
  opacity:0;
  z-index:500;
  visibility:hidden;
  transition: opacity 1s;
}

.underlay-on {
  visibility: visible;
  opacity:.5;
  cursor: pointer;
}

/* to lock the page*/
.body-lock {
  overflow: hidden;
}

.menu-section {
  display: none;
}

#perPage {
  margin: 5px 5px 5px 0;
}

.pagination {

  align-items: center;

  &:before{
    content: "Page";
    margin-right: 5px;
  }

  li {
    display:inline-block;
    padding:5px;

    a {
      text-decoration: none;
      color: var(--dark);
    }
  }

  .active a {
    color: var(--mid);
    text-decoration: none;
  }
}

@media (min-width: 1024px) {

}

@media print {

  body{
    color: #000!important;
    background-color: #fff!important;
  }

  .underlay, .menu-tray, .hamburger, #newOrLoad, nav, #takeForm, .search, #tLog .flex-row, .pagination, #remove-button {
    display: none!important;
  }

  #tLog {
    display: block!important;
  }

  tr {
    padding: $pad;

    &:nth-child(even) {
      background-color: #eee;
    }

    &.marked {
      background-color: #999!important;
      color: #000;
    }
  }

}

.switches {
  @include tablet-and-wider {
    width: 50%;
  }

  @include desktop-and-wider {
    width: 75%;
    display: flex;
    flex-direction: column;

    .switch {
      margin-bottom: auto;
    }

  }
}

.leave-room-for-jesus {
    // this class name is purely to entertain myself, and remind me what it does.
    // the other option was to call it ".dont-stand-so-close-to-me"...
    display: flex;
    align-items: center;
    justify-content: flex-end;
    margin: 1rem 0;
}

.leave-room-for-jesus *:first-child {
  margin-right: auto;
}

// Inspired by www.w3schools.com/howto/howto_css_switch.asp and then I changed the styling to match the mock-up.

.switch {
  position: relative;
  display: inline-block;
  width: 90px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--mid) ;
  border: 2px solid var(--light);
  -webkit-transition: .5s;
  transition: .5s;
}

// to confirm: I understand that this is the part that is the 'toggle' that slides across.
.slider::after {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 0;
  bottom: 0;

  background-color: #fff;
  border: 2px solid var(--dark);
  -webkit-transition: .5s;
  transition: .5s;
}

// and here's where I added the writing.
.slider::before {
  content: "OFF";
  position: absolute;
  top: 5px;
  right: 15px;
  color: var(--dark);
  transition: .7s;
}

// color changing
input:checked + .slider {
  background-color: var(--light);
}

input:focus + .slider {
  box-shadow: 0 0 1px var(--light);
}

// I understand that this is the part making the movement happen when the box is checked.
input:checked + .slider::after {
  -webkit-transform: translateX(56px);
  -ms-transform: translateX(56px);
  transform: translateX(56px);
}

// similarly - this changes the writing
input:checked + .slider::before {
  content: "ON";
  position: absolute;
  top: 5px;
  left: -20px;
  color: var(--dark);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round::after {
  border-radius: 50%;
}
